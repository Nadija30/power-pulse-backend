{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.2",
    "title": "Power-pulse",
    "description": "Showing off swagger-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    { "url": "http://localhost:3000" },
    { "url": "https://power-pulse-backend.onrender.com" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Exercises",
      "description": "Exercises endpoints"
    },
    {
      "name": "Diary",
      "description": "Diary endpoints"
    },
    {
      "name": "Products",
      "description": "Products endpoints"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "409": {
            "description": "Email in use",
            "content": {}
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "paramrters": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      }
    },
    "/api/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Current user",
        "paramrters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization token",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "User successfully logged out"
          },
          "404": {
            "description": "Not Found",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/auth/avatars": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Update user avatar",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization token",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update avatar object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AvatarsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvatarsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/verify": {
      "post": {
        "tags": ["Auth"],
        "summary": "Verify email (send virification email)",
        "paramrters": [],
        "requestBody": {
          "description": "Verification email object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        }
      }
    },
    "/api/auth/verify/{:verificationToken}": {
      "get": {
        "tags": ["Auth"],
        "summary": "Verify email with a verification token",
        "parameters": [
          {
            "in": "path",
            "name": ":verificationToken",
            "required": true,
            "type": "string",
            "description": "Verification token"
          }
        ],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "minLength": "3",
            "example": "test1"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "test1@gmail.com",
            "pattern": "/^w+@[a-zA-Z_]+?.[a-zA-Z]{2,3}$/"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "pass123",
            "minlength": "6"
          }
        }
      },

      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "test1"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "test123@gmail.com"
              }
            }
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "pattern": "/^w+@[a-zA-Z_]+?.[a-zA-Z]{2,3}$/",
            "example": "test1@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "test123",
            "minlength": "6"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NTNiN2E1ZGRjY2RjMDhiNmJmOWE0YSIsImlhdCI6MTY5OTk4NTMxNywiZXhwIjoxNzAwMDY4MTE3fQ.-dVm-aI4ozwWLhFYMJhirnCVJQLo4itlu3DypPC-5-A"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "test1"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "test1@gmail.com"
              },
              "_id": {
                "type": "string",
                "description": "User's _id"
              },
              "password": {
                "type": "string",
                "description": "User's password"
              },
              "verify": {
                "type": "boolean",
                "example": "true or false"
              },
              "verificationToken": {
                "type": "string"
              },
              "height": {
                "type": "number"
              },
              "currentWeight": {
                "type": "number"
              },
              "desiredWeight": {
                "type": "number"
              },
              "birthday": {
                "type": "Date"
              },
              "blood": {
                "type": "number"
              },
              "sex": {
                "type": "string"
              },
              "levelActivity": {
                "type": "number"
              },
              "bmr": {
                "type": "number"
              }
            }
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "test1"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "test1@gmail.com"
              },
              "_id": {
                "type": "string",
                "description": "User's _id"
              },
              "password": {
                "type": "string",
                "description": "User's password"
              },
              "verify": {
                "type": "boolean",
                "example": "true or false"
              },
              "verificationToken": {
                "type": "string"
              },
              "height": {
                "type": "number"
              },
              "currentWeight": {
                "type": "number"
              },
              "desiredWeight": {
                "type": "number"
              },
              "birthday": {
                "type": "Date"
              },
              "blood": {
                "type": "number"
              },
              "sex": {
                "type": "string"
              },
              "levelActivity": {
                "type": "number"
              },
              "token": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NTNiN2E1ZGRjY2RjMDhiNmJmOWE0YSIsImlhdCI6MTY5OTk4NTMxNywiZXhwIjoxNzAwMDY4MTE3fQ.-dVm-aI4ozwWLhFYMJhirnCVJQLo4itlu3DypPC-5-A"
              },
              "bmr": {
                "type": "number"
              }
            }
          }
        }
      },
      "AvatarsRequest": {
        "required": ["Key"],
        "properties": {
          "Key": {
            "type": "file"
          }
        }
      },
      "AvatarsResponse": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "User's avatars",
            "example": "https://res.cloudinary.com/dc0fzggki/image/upload/v1705436593/avatars/a-cupcake-with-a-strawberry-on-top-and-a-strawberry-on-the-top.jpg.jpg"
          }
        }
      },
      "VerifyEmailRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
